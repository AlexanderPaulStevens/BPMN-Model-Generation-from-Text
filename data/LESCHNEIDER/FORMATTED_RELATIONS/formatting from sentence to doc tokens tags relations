{"nbformat":4,"nbformat_minor":0,"metadata":{"colab":{"provenance":[],"authorship_tag":"ABX9TyO0ApjGNlY+BnhK7CNDyA2n"},"kernelspec":{"name":"python3","display_name":"Python 3"},"language_info":{"name":"python"}},"cells":[{"cell_type":"code","source":["from google.colab import drive\n","\n","# This will prompt for authorization.\n","drive.mount('/content/drive')"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"EUKBAhkbadaW","executionInfo":{"status":"ok","timestamp":1713967397107,"user_tz":-120,"elapsed":68199,"user":{"displayName":"Charlotte Schneider","userId":"15797801204403852136"}},"outputId":"4c521c76-a383-429c-b172-60285d2d2314"},"execution_count":5,"outputs":[{"output_type":"stream","name":"stdout","text":["Mounted at /content/drive\n"]}]},{"cell_type":"code","execution_count":23,"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"tz9nuDQtYA-s","executionInfo":{"status":"ok","timestamp":1713971248882,"user_tz":-120,"elapsed":218,"user":{"displayName":"Charlotte Schneider","userId":"15797801204403852136"}},"outputId":"9cbdb94d-601a-47c8-9ddb-614ac1600dfe"},"outputs":[{"output_type":"stream","name":"stdout","text":["JSON data has been written to /content/drive/MyDrive/THESIS/DATA/LESCHNEIDER DATA/Documents/FORMATTED_RELATIONS/doc-20.15_formatted_relations.json\n"]}],"source":["import json\n","\n","# Assuming the input data is stored in a list of dictionaries\n","input_data = [\n","{\"document name\": \"doc-20.15 - library request\", \"sentence-ID\": 0, \"tokens\": [\"When\", \"a\", \"request\", \"for\", \"a\", \"book\", \"comes\", \"in\", \",\", \"the\", \"library\", \"staff\", \"member\", \"consults\", \"the\", \"digital\", \"catalog\", \"to\", \"check\", \"for\", \"the\", \"book's\", \"availability\", \".\"], \"ner-tags\": [\"O\", \"O\", \"O\", \"O\", \"O\", \"O\", \"O\", \"O\", \"O\", \"B-Actor\", \"I-Actor\", \"I-Actor\", \"I-Actor\", \"B-Activity\", \"B-Activity Data\", \"I-Activity Data\", \"I-Activity Data\", \"O\", \"O\", \"O\", \"O\", \"O\", \"O\", \"O\"]},\n","{\"document name\": \"doc-20.15 - library request\", \"sentence-ID\": 1, \"tokens\": [\"If\", \"the\", \"book\", \"is\", \"currently\", \"on\", \"loan\", \"or\", \"not\", \"in\", \"the\", \"library's\", \"collection\", \",\", \"the\", \"staff\", \"member\", \"informs\", \"the\", \"requester\", \"right\", \"away\", \".\"], \"ner-tags\": [\"B-XOR Gateway\", \"B-Condition Specification\", \"I-Condition Specification\", \"I-Condition Specification\", \"I-Condition Specification\", \"I-Condition Specification\", \"I-Condition Specification\", \"I-Condition Specification\", \"I-Condition Specification\", \"I-Condition Specification\", \"I-Condition Specification\", \"I-Condition Specification\", \"I-Condition Specification\", \"O\", \"B-Actor\", \"I-Actor\", \"I-Actor\", \"B-Activity\", \"B-Activity Data\", \"I-Activity Data\", \"O\", \"O\", \"O\"]},\n","{\"document name\": \"doc-20.15 - library request\", \"sentence-ID\": 2, \"tokens\": [\"If\", \"the\", \"book\", \"is\", \"available\", \",\", \"the\", \"staff\", \"member\", \"starts\", \"the\", \"checkout\", \"procedure\", \"by\", \"logging\", \"the\", \"book\", \"against\", \"the\", \"requester's\", \"library\", \"account\", \"and\", \"simultaneously\", \"retrieving\", \"the\", \"book\", \"using\", \"the\", \"automatic\", \"system\", \".\"], \"ner-tags\": [\"B-XOR Gateway\", \"B-Condition Specification\", \"I-Condition Specification\", \"I-Condition Specification\", \"I-Condition Specification\", \"O\", \"B-Actor\", \"I-Actor\", \"I-Actor\", \"O\", \"O\", \"O\", \"O\", \"O\", \"B-Activity\", \"B-Activity Data\", \"I-Activity Data\", \"B-Further Specification\", \"I-Further Specification\", \"I-Further Specification\", \"I-Further Specification\", \"I-Further Specification\", \"B-AND Gateway\", \"I-AND Gateway\", \"B-Activity\", \"B-Activity Data\", \"I-Activity Data\", \"B-Further Specification\", \"I-Further Specification\", \"I-Further Specification\", \"I-Further Specification\", \"O\"]}\n","]\n","\n","# Initialize lists to hold the reformatted data\n","tokens = []\n","token_ids = []\n","ner_tags = []\n","sentence_ids = []\n","relations = []\n","\n","# Process each sentence\n","for data in input_data:\n","    for idx, token in enumerate(data['tokens']):\n","        tokens.append(token)\n","        token_ids.append(idx)  # Token IDs reset for each new sentence\n","        ner_tags.append(data['ner-tags'][idx])\n","        sentence_ids.append(data['sentence-ID'])  # Sentence ID is repeated for all tokens in the sentence\n","\n","# Structure the final formatted data\n","formatted_data = {\n","    \"document name\": input_data[0]['document name'],\n","    \"tokens\": tokens,\n","    \"tokens-IDs\": token_ids,\n","    \"ner_tags\": ner_tags,\n","    \"sentence-IDs\": sentence_ids,\n","    \"relations\": relations\n","}\n","\n","formatted_data\n","\n","# File path where you want to save the JSON data\n","file_path = '/content/drive/MyDrive/THESIS/DATA/LESCHNEIDER DATA/Documents/FORMATTED_RELATIONS/doc-20.15_formatted_relations.json'\n","\n","# Writing the dictionary to a JSON file\n","with open(file_path, 'w') as file:\n","    json.dump(formatted_data, file, indent=4)\n","\n","print(\"JSON data has been written to\", file_path)"]},{"cell_type":"code","source":[],"metadata":{"id":"4p2asDUUgjAs","executionInfo":{"status":"ok","timestamp":1713974973429,"user_tz":-120,"elapsed":378,"user":{"displayName":"Charlotte Schneider","userId":"15797801204403852136"}}},"execution_count":30,"outputs":[]},{"cell_type":"code","source":["relation_data = {\n","  \"source-head-sentence-ID\": [0, 0, 0, 1, 1, 1, 1, 1, 1, 1, 2, 2, 2, 2, 3, 3, 3, 4, 4, 4, 4, 4, 5, 5, 5, 5, 5, 5, 5, 5, 6, 6, 7, 7, 7, 7],\n","  \"source-head-word-ID\": [2, 2, 2, 3, 3, 3, 3, 11, 11, 11, 4, 4, 4, 4, 2, 2, 2, 0, 1, 8, 8, 8, 2, 3, 3, 3, 8, 8, 8, 13, 0, 8, 0, 2, 9, 9],\n","  \"relation-type\": [\"actor performer\", \"uses\", \"flow\", \"actor performer\", \"uses\", \"further specification\", \"flow\", \"actor performer\", \"uses\", \"flow\", \"actor performer\", \"uses\", \"actor recipient\", \"flow\", \"actor performer\", \"uses\", \"flow\", \"flow\", \"flow\", \"actor performer\", \"uses\", \"flow\", \"flow\", \"activity performer\", \"uses\", \"flow\", \"activity performer\", \"uses\", \"flow\", \"activity performer\", \"uses\", \"flow\", \"flow\", \"flow\", \"actor performer\", \"uses\", \"actor recipient\"],\n","  \"target-head-sentence-ID\": [0, 0, 1, 1, 1, 1, 1, 1, 1, 2, 2, 2, 2, 3, 3, 3, 4, 4, 4, 4, 4, 5, 5, 4, 5, 6, 4, 5, 6, 4, 6, 6, 7, 7, 7, 7],\n","  \"target-head-word-ID\": [0, 3, 3, 0, 4, 7, 11, 0, 12, 4, 0, 5, 10, 2, 0, 3, 0, 1, 8, 6, 9, 2, 5, 6, 5, 0, 6, 10, 0, 6, 14, 0, 8, 2, 7, 10]\n","}\n","\n","\n","\n","\n","\n","\n","\n","# Transforming the provided relation data into a list of dictionaries\n","formatted_relations = []\n","for i in range(len(relation_data['source-head-sentence-ID'])):\n","    relation = {\n","        \"source-head-sentence-ID\": relation_data['source-head-sentence-ID'][i],\n","        \"source-head-word-ID\": relation_data['source-head-word-ID'][i],\n","        \"relation-type\": relation_data['relation-type'][i],\n","        \"target-head-sentence-ID\": relation_data['target-head-sentence-ID'][i],\n","        \"target-head-word-ID\": relation_data['target-head-word-ID'][i]\n","    }\n","    formatted_relations.append(relation)\n","\n","# Print or use the formatted_relations list as needed\n","print(formatted_relations)"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"k3gBlSAcsN68","executionInfo":{"status":"ok","timestamp":1713976956984,"user_tz":-120,"elapsed":234,"user":{"displayName":"Charlotte Schneider","userId":"15797801204403852136"}},"outputId":"5562a739-5538-4405-f6e5-3177040044d6"},"execution_count":39,"outputs":[{"output_type":"stream","name":"stdout","text":["[{'source-head-sentence-ID': 0, 'source-head-word-ID': 2, 'relation-type': 'actor performer', 'target-head-sentence-ID': 0, 'target-head-word-ID': 0}, {'source-head-sentence-ID': 0, 'source-head-word-ID': 2, 'relation-type': 'uses', 'target-head-sentence-ID': 0, 'target-head-word-ID': 3}, {'source-head-sentence-ID': 0, 'source-head-word-ID': 2, 'relation-type': 'flow', 'target-head-sentence-ID': 1, 'target-head-word-ID': 3}, {'source-head-sentence-ID': 1, 'source-head-word-ID': 3, 'relation-type': 'actor performer', 'target-head-sentence-ID': 1, 'target-head-word-ID': 0}, {'source-head-sentence-ID': 1, 'source-head-word-ID': 3, 'relation-type': 'uses', 'target-head-sentence-ID': 1, 'target-head-word-ID': 4}, {'source-head-sentence-ID': 1, 'source-head-word-ID': 3, 'relation-type': 'further specification', 'target-head-sentence-ID': 1, 'target-head-word-ID': 7}, {'source-head-sentence-ID': 1, 'source-head-word-ID': 3, 'relation-type': 'flow', 'target-head-sentence-ID': 1, 'target-head-word-ID': 11}, {'source-head-sentence-ID': 1, 'source-head-word-ID': 11, 'relation-type': 'actor performer', 'target-head-sentence-ID': 1, 'target-head-word-ID': 0}, {'source-head-sentence-ID': 1, 'source-head-word-ID': 11, 'relation-type': 'uses', 'target-head-sentence-ID': 1, 'target-head-word-ID': 12}, {'source-head-sentence-ID': 1, 'source-head-word-ID': 11, 'relation-type': 'flow', 'target-head-sentence-ID': 2, 'target-head-word-ID': 4}, {'source-head-sentence-ID': 2, 'source-head-word-ID': 4, 'relation-type': 'actor performer', 'target-head-sentence-ID': 2, 'target-head-word-ID': 0}, {'source-head-sentence-ID': 2, 'source-head-word-ID': 4, 'relation-type': 'uses', 'target-head-sentence-ID': 2, 'target-head-word-ID': 5}, {'source-head-sentence-ID': 2, 'source-head-word-ID': 4, 'relation-type': 'actor recipient', 'target-head-sentence-ID': 2, 'target-head-word-ID': 10}, {'source-head-sentence-ID': 2, 'source-head-word-ID': 4, 'relation-type': 'flow', 'target-head-sentence-ID': 3, 'target-head-word-ID': 2}, {'source-head-sentence-ID': 3, 'source-head-word-ID': 2, 'relation-type': 'actor performer', 'target-head-sentence-ID': 3, 'target-head-word-ID': 0}, {'source-head-sentence-ID': 3, 'source-head-word-ID': 2, 'relation-type': 'uses', 'target-head-sentence-ID': 3, 'target-head-word-ID': 3}, {'source-head-sentence-ID': 3, 'source-head-word-ID': 2, 'relation-type': 'flow', 'target-head-sentence-ID': 4, 'target-head-word-ID': 0}, {'source-head-sentence-ID': 4, 'source-head-word-ID': 0, 'relation-type': 'flow', 'target-head-sentence-ID': 4, 'target-head-word-ID': 1}, {'source-head-sentence-ID': 4, 'source-head-word-ID': 1, 'relation-type': 'flow', 'target-head-sentence-ID': 4, 'target-head-word-ID': 8}, {'source-head-sentence-ID': 4, 'source-head-word-ID': 8, 'relation-type': 'actor performer', 'target-head-sentence-ID': 4, 'target-head-word-ID': 6}, {'source-head-sentence-ID': 4, 'source-head-word-ID': 8, 'relation-type': 'uses', 'target-head-sentence-ID': 4, 'target-head-word-ID': 9}, {'source-head-sentence-ID': 4, 'source-head-word-ID': 8, 'relation-type': 'flow', 'target-head-sentence-ID': 5, 'target-head-word-ID': 2}, {'source-head-sentence-ID': 5, 'source-head-word-ID': 2, 'relation-type': 'flow', 'target-head-sentence-ID': 5, 'target-head-word-ID': 5}, {'source-head-sentence-ID': 5, 'source-head-word-ID': 3, 'relation-type': 'activity performer', 'target-head-sentence-ID': 4, 'target-head-word-ID': 6}, {'source-head-sentence-ID': 5, 'source-head-word-ID': 3, 'relation-type': 'uses', 'target-head-sentence-ID': 5, 'target-head-word-ID': 5}, {'source-head-sentence-ID': 5, 'source-head-word-ID': 3, 'relation-type': 'flow', 'target-head-sentence-ID': 6, 'target-head-word-ID': 0}, {'source-head-sentence-ID': 5, 'source-head-word-ID': 8, 'relation-type': 'activity performer', 'target-head-sentence-ID': 4, 'target-head-word-ID': 6}, {'source-head-sentence-ID': 5, 'source-head-word-ID': 8, 'relation-type': 'uses', 'target-head-sentence-ID': 5, 'target-head-word-ID': 10}, {'source-head-sentence-ID': 5, 'source-head-word-ID': 8, 'relation-type': 'flow', 'target-head-sentence-ID': 6, 'target-head-word-ID': 0}, {'source-head-sentence-ID': 5, 'source-head-word-ID': 13, 'relation-type': 'activity performer', 'target-head-sentence-ID': 4, 'target-head-word-ID': 6}, {'source-head-sentence-ID': 6, 'source-head-word-ID': 0, 'relation-type': 'uses', 'target-head-sentence-ID': 6, 'target-head-word-ID': 14}, {'source-head-sentence-ID': 6, 'source-head-word-ID': 8, 'relation-type': 'flow', 'target-head-sentence-ID': 6, 'target-head-word-ID': 0}, {'source-head-sentence-ID': 7, 'source-head-word-ID': 0, 'relation-type': 'flow', 'target-head-sentence-ID': 7, 'target-head-word-ID': 8}, {'source-head-sentence-ID': 7, 'source-head-word-ID': 2, 'relation-type': 'flow', 'target-head-sentence-ID': 7, 'target-head-word-ID': 2}, {'source-head-sentence-ID': 7, 'source-head-word-ID': 9, 'relation-type': 'actor performer', 'target-head-sentence-ID': 7, 'target-head-word-ID': 7}, {'source-head-sentence-ID': 7, 'source-head-word-ID': 9, 'relation-type': 'uses', 'target-head-sentence-ID': 7, 'target-head-word-ID': 10}]\n"]}]}]}